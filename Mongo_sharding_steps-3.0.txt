mkdir c:\data\shard1\node1
mkdir c:\data\shard1\node2
mkdir c:\data\shard2\node1
mkdir c:\data\shard2\node2
mkdir c:\data\cfg1
mkdir c:\data\cfg2

start mongod --shardsvr --replSet RS_1 --logpath "shard_1_1.log" --dbpath c:\data\shard1\node1 --port 27001 --logappend --smallfiles --oplogSize 50
mongod --shardsvr --replSet RS_1 --dbpath c:\data\shard1\node2 --port 27002 --logappend --smallfiles --oplogSize 50
mongod --shardsvr --replSet RS_2 --dbpath c:\data\shard2\node1 --port 27003 --logappend --smallfiles --oplogSize 50
mongod --shardsvr --replSet RS_2 --dbpath c:\data\shard2\node2 --port 27004 --logappend --smallfiles --oplogSize 50



start mongo --port 27001

rs_1_conf = {
           _id: "RS_1",
           members: [
                      {
                       _id: 0,
                       host: "10.20.8.93:27001"
                      }
                    ]
         }

rs.initiate(rs_1_conf)
rs.conf()

rs.add("10.20.8.93:27002")





start mongo --port 27003

rs_2_conf = {
           _id: "RS_2",
           members: [
                      {
                       _id: 0,
                       host: "10.20.8.93:27003"
                      }
                    ]
         }

rs.initiate(rs_2_conf)
rs.conf()

rs.add("10.20.8.93:27004")



Mongo version 3.0 :
start mongod --configsvr --dbpath c:\data\cfg1 --port 27011 --logpath cfg1.log --logappend
Mongo version 3.2 (--replSet )
start mongod --configsvr --replSet RS_CONFIG --dbpath c:\data\cfg2 --port 27012 --logpath cfg2.log --logappend


start mongo --port 27011

rs_config_1_conf = {
           _id: "RS_CONFIG",
           members: [
                      {
                       _id: 0,
                       host: "10.20.8.93:27011"
                      }
                    ]
         }

rs.initiate(rs_config_1_conf)
rs.conf()

rs.add("10.20.8.93:27012")



start mongos --configdb RS_CONFIG/10.20.8.93:27011,10.20.8.93:27012 --logappend --logpath mongos_1.log --port 27017
start mongos --configdb RS_CONFIG/10.20.8.93:27011,10.20.8.93:27012 --logappend --logpath mongos_2.log --port 27018



//Connect to default mongos
start mongo --port 27017

use config
show collections
db.chunks.find()
db.databases.find()
db.shards.find()

mongos>sh.help()
mongos>sh.addShard("RS_1/10.20.8.93:27001")  //any one node is fine.
mongos>sh.addShard("RS_2/10.20.8.93:27003")  //any one node is fine.
mongos>sh.status()

mongos>use config
mongos>show collections
mongos>db.shards.find() //you should get list of all shards configured.

//Lets shard collections now

mongos>sh.help()
mongos>db
mongos>sh.enableSharding("xordb")
mongos>use xordb
mongos>sh.shardCollection("xordb.users", {_id: 1}, true)
mongos>sh.status() //You can find the users collection is sharded
mongos>for(var i=0;i<2000;i++) {
	db.users.insert({x: i, y: 3, z: "test         test"});
	}
mongos>sh.status() //Notice chunks distribution across shards. ("xordb.users chunks:")

//Try with hashed partitioning
mongos>sh.shardCollection( "xordb.contacts", { name: "hashed" } )
mongos>for(var i=0;i<1000;i++) {
	db.contacts.insert({name: i, y: 3, z: "test         test"});
	}
mongos>sh.status() //Notice chunks distribution across shards. ("xordb.contacts chunks:")
